"""
元组的本质是不可修改的列表，元组中的元素不能被修改，
不支持增删改操作，没有更新元组元素的函数，
除此之外，元组的使用和列表没有区别
"""

# 元组的创建

# 圆括号定义
tup1 = ('x', 'y', 'z')
tup2 = (7,)
'''
当元组只有一个数字元素并用圆括号创建元组时，
(7)会被认为是数字类型而不是元组类型，
在单个数字后面加上逗号就能消除歧义
'''
# 用tuple函数创建元组
tup3 = tuple((3, 4, [5, 6, 'cat']))
'''
与list()函数功能相似，将其他数据类型的对象转换为了
元组类型，序列传入[]列表、{}集合 均可
'''
# 列表推导式创建元组
array = (i + 1 for i in range(10))
tup4 = tuple(array)  # 通过tuple()函数对array生成器序列转换成元组才能输出元组
print(tup4)

# python内置的元组处理方法
tup = (1, 2, 3, 4, 5)
list1 = [1, 3, 5]
len(tup)  # 计算元组元素个数
max(tup)  # 返回元组中元素的最大值
min(tup)  # 返回元组中元素的最小值
tuple(list1)  # 类型转换

# 序列的封包和解包: 字符串、列表、元组这些序列类型都支持封包解包功能
ex = 1, 'cat', 2
print(ex)
'''
输出为(1, 'cat', 2)，当有多个值赋给一个变量时，
多个值将自动封装成元组
'''
x, y, z = ex
print(x, y, z)
'''
输出为1 cat 2，将序列直接赋值给多个变量时，
序列的元素会被依次赋值给每个变量
'''
fir, sec, *rest = range(10)
print(fir, sec)
print(rest)
'''
输出为
0 1
[2, 3, 4, 5, 6, 7, 8, 9]
解包时也能只解出部分，未解出的部分用列表变量保存，
在变量前添加*，表示其为一个列表，用来保存未解包的元素
'''