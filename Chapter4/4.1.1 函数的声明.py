"""
python函数将常用的、实现某种功能的代码段
封装成封装成一个独立的模块，当需要这种功能时，
以函数名字作为接口，就能引用整个整个代码段
"""


# return后跟多少个结果，在函数体外部就需要多少个变量来接收这些结果，且变量与执行结果之间按顺序对应
def f():        # 函数名([参数列表]):
    a = 100      # 函数体
    b = 2 * a
    c = b ** 2
    return a, b, c


a, b, c = f()
print(f"a={a}, b={b}, c={c}")

'''
函数名：最好定义一个能直观反映出函数功能的名字
参数列表：不是必须被定义的，需要时可以定义一个或多个参数，
        函数被调用时，需要传入用参数列表里参数个数同样多的参数值，
        参数值与参数之间按顺序对应
return语句：将函数体的执行结果返回到函数体外，使得执行结果能够保存并且能够在外部访问，
           无论有多少个return语句，只要碰到第1个return语句后函数体就会执行到此，并返回返回值，
           return语句不是必须存在，只有执行结果需要被保存才使用。
'''


# 函数体外没有相应数量的变量接收返回结果，则执行结果会被打包成1个元组并返回
def p():
    a = 100
    b = 2 * a
    c = b ** 2
    return a, b, c


value = p()
print(f"函数p()的返回结果为{value}")  # 输出为(100, 200, 40000)


# return语句存在但是没有跟任何表达式，则返回一个None值
